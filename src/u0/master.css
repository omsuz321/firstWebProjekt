        /*to do
        the iframe must be pulled to the side when the side bar opens
        i could archive this via widht manipulating
        */
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        :root {
            --upper-bar-height: 60px; /* Defined the height of the upper bar */
            --side-bar-width: 80px;
        }

        .container {
            display: flex;
            overflow: hidden;
            height: calc(100vh - var(--upper-bar-height)); /* Adjusting the height to fill the remaining viewport height */
            width:100vw;
            overflow: hidden;
            transition: left 0.5s;
            flex-wrap: wrap;
            flex-direction: row-reverse;
        }
        .current-excerise{
            justify-self: center;
        }

        body {
            min-height: 100vh;
            background: linear-gradient(#252020, #74cfad); /* Gradient background */
            padding-top: var(--upper-bar-height); /* Adjusting padding-top to match the upper bar height */
        }

        /*this is for the exercises to be shown in with*/
        .exercise {
            margin: 30px;
            height: calc(80vh - var(--upper-bar-height));
            width: calc(100vw - var(--side-bar-width));
            background-color: #ffffff;
            border-radius: 10px;
        }
        


        .exercise iframe {

            width: 100%;
            height: 100%; 
            border-radius: 10px;    
        }
        .logo {
            

        }



        

        .upper-bar {

            display: flex;
            position: fixed;
            justify-content: space-between;
            top: 0;
            width: 100vw;
            height: var(--upper-bar-height);
            z-index: 1100;  
            color: #ffff

        }

        .upper-bar  * {

            color: #ffff;
            padding: 10px;
            padding-right: 50px;

        }
        

        .sidebar {
            display: grid; 
            grid-template-areas: /* left will the exercises be and the right is only the logo to pop up */
            "item arrow"
            "item arrow"
            "item arrow"
            "item arrow"
            "item arrow"
            "item arrow"
            "item arrow"
            "item arrow"
            "item arrow"
            "item arrow"
            "item arrow"
            "item arrow";
            position: fixed;
            top: var(--upper-bar-height); /* Position below the upper bar */
           
            width: var(--side-bar-width); /* Initial width of the sidebar */
            height: calc(100vh); 
            background-color: rgba(255, 0, 0, 0);
            left: calc(-1 * var(--side-bar-width) + 20px); /* to position  sidebar outside the viewport */
            transition: left 0.5s, background-color 0.5s; /*  smooth animation form left is side bare gets pulled into the view port */
            z-index: 1000; 
            overflow: hidden; /* Hides scrollbar by default */
            
            font-family: "Helvetica Neue", Arial, sans-serif; 
            font-size: 16px; 
            font-weight: bold; 
        }
        

        .sidebar:hover {
            left: 0; /* Pull the sidebar into view */
            background-color:#ffff;
            overflow: auto; /* Shows scrollbar on hover */
            
        }

        




        .items{
            grid-area:"item";
        }


        .items {
            grid-area: item;
            display: flex;
            flex-direction: column;
            gap: 10px; /* Add some space between each item */
        }
        
        /* Style for each individual item */
        .items div {
            padding: 10px; 
            font-size: 18px; /* Sets the font size */
            font-weight: bold; /* Sets the font weight */
            color: #333; /* Sets the text color */
            background-color: #f0f0f0; /* Sets the background color */
            border-radius: 5px; /* Adds rounded corners */
            transition: background-color 0.3s; /* Smooths the transition for background color */
        }
        
        /* Hover effect for items */
        .items div:hover {
            background-color: #ddd; /* Change background color on hover */
        }




        .arrow {
            grid-area: "arrow";
            align-self: center;

        }
        @media(max-width: 800px){

            .upper-bar{
                flex-direction: column;
            }
            

        }



        /*
        In CSS, "the overflow" property controls how content behaves when it's larger than the container. Common values include:

        visible: Content overflows and is visible outside the container.
        hidden: Content is clipped, and overflow is not visible.
        scroll: Scrollbars appear to navigate through the overflowing content.
        auto: Scrollbars appear only if content overflows, allowing scrolling.
        inherit: Inherits the overflow value from the parent element.


        The "transition" property in CSS is used to control the smoothness and duration of changes in property values.
        It allows you to define how an element should transition from one state to another 
        when certain properties are altered.

        href="#"  is often used in anchor (<a>) elements to create a hyperlink that doesn't 
        navigate to a different page but stays on the current page or triggers a specific action.

        */

